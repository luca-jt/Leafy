controller events
sampled animations from files
cascaded shadow mapping
shadow anti-aliasing -> pcss
graphics improvement -> https://youtu.be/Uc8FEI5bg3w
scene files and loading of them in the rendering system -> serialization (serde)
voxelized meshes -> Mesh becomes enum | https://eisenwave.github.io/voxel-compression-docs/svo/svo.html
---------------------------------------------------------------------
2D sprite hitboxes with seperate collision checking
cube shadow maps for point lights
particle system https://youtu.be/GK0jHlv3e3w | -> glPoints?
dpi scale factor event handling? -> render res handled by screen texture res (if that setting is in %, maybe scale that or smth)
materials -> reflection?
new rendering system with effect shaders that renders to a screen texture (for SSAO?) -> maybe only later
glsl preprocessor for including shader files and not copy and pasting everything
dynamic mesh LOD usage
sky box cube maps
conways game of life example
ui basics + font rendering + events for ui struct
sprite renderer -> depth layers configurable, sprite component
seperate the ecs from the asset data to avoid unsafe mutable queries?
on collision event functions for entities (-> with entity flag that is set in during collision) -> probably also want info about the collision such as the point of collision
collision + friction -> https://youtu.be/byP6cA71Cgw | https://youtu.be/4r_EvmPKOvY
only store the inertia matrix inverse
flag for making enities float -> exclude them from gravity physics
