controller events
animations
graphics improvement -> https://youtu.be/Uc8FEI5bg3w
scene files and loading of them in the rendering system -> serialization (serde)
voxelized meshes + hitboxes (for non-convex cases) -> Mesh becomes enum | https://eisenwave.github.io/voxel-compression-docs/svo/svo.html
using a different obj loader that also supports mtl files and support mtl files in the engine -> https://github.com/Twinklebear/tobj
raytracing the current scene
cascaded shadow mapping
shadow anti-aliasing -> pcss
---------------------------------------------------------------------
collision resolvement of things that should not slide downhill possible?
2D sprite hitboxes with seperate collision checking
cube shadow maps for point lights
particle system https://youtu.be/GK0jHlv3e3w | -> glPoints?
dpi scale factor event handling? -> render res handled by screen texture res (if that setting is in %, maybe scale that or smth)
materials -> reflection?
new rendering system with effect shaders that renders to a screen texture (for SSAO?) -> maybe only later
glsl preprocessor for including shader files and not copy and pasting everything
sky box cube maps
conways game of life example
ui basics + font rendering + events for ui struct
sprite renderer -> depth layers configurable, sprite component
for on collision event functions for entities -> info about the collision is stored inside the collider component
collision -> https://youtu.be/byP6cA71Cgw | https://youtu.be/4r_EvmPKOvY
