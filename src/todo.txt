controller events
raytracing the current scene
switchable render backends -> vulkan support
animations
graphics improvement -> https://youtu.be/Uc8FEI5bg3w, bloom
scene files and loading of them -> serialization (serde)
shadow anti-aliasing -> pcss
cascaded shadow mapping
voxelized meshes + hitboxes (for non-convex cases) -> Mesh becomes enum | https://eisenwave.github.io/voxel-compression-docs/svo/svo.html
volumetric rendering -> voxels
different obj loader that also supports mtl files and support mtl files in the engine -> https://github.com/Twinklebear/tobj -> more meshes, skeletons
object outlining with stencil buffer
cube shadow maps for point lights as an option
2D animation frames
materials -> reflection with dynamic environment maps, water
2D sprite hitboxes with seperate collision checking
particle system https://youtu.be/GK0jHlv3e3w | -> glPoints? , variants: facing the cam, decay time (has a distribution), permanent, ... , compute shaders?
ui basics + font rendering + events for ui struct (e.g. dpi scaling, mouse)
conways game of life example
sprite renderer
make asset command auto calls optional
