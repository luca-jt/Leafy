raytrace the current scene
switchable render backends -> vulkan support, use a static reference to a dyn trait object
skeletal animations
collision fix -> sequential solver? + better memory allocation + performance, terrain collision, trees, better time step management (seems to be too slow)
volumetric rendering -> voxels https://eisenwave.github.io/voxel-compression-docs/svo/svo.html
graphics -> https://youtu.be/Uc8FEI5bg3w, screen space effects, reflection with dynamic environment maps, water shader, depth of field
scene files and loading of them -> serialization (serde) -> editor
shadow anti-aliasing -> pcss
cascaded shadow mapping -> dir light shadow maps need projection matrix size parameter
2D animation frames
2D sprite hitboxes with seperate collision checking
raycasting
particle system https://youtu.be/GK0jHlv3e3w | -> glPoints? , variants: facing the cam, decay time (has a distribution)

add built-in shading styles like cell shading and custom shaders
make instance renderer able to render textured and colored at the same time?
ui basics + font rendering + events for ui struct (e.g. dpi scaling, mouse)
object outlining with stencil buffer
bloom

asset data arena allocator
material texture loading with shininess textures with float values might cause problems
use all texture types and materials in the shaders
all asset loading fails or missing data need to be backed with defaults
differentiation between sprite camera and regular ortho cam -> usage of that regular ortho cam
